# escape=`
# Development Dockerfile for Windows containers - builds from source
# NOTE: This Dockerfile is for Windows containers and requires a Windows host or Windows Server with Docker configured for Windows containers.

FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set working directory
WORKDIR C:\app

# Install Node.js (LTS version)
RUN powershell -Command `
    "Invoke-WebRequest -Uri 'https://nodejs.org/dist/v20.18.1/node-v20.18.1-win-x64.msi' -OutFile 'nodejs.msi'; `
    Start-Process msiexec.exe -Wait -ArgumentList '/i nodejs.msi /quiet /norestart'; `
    Remove-Item nodejs.msi"

# Install Rust toolchain
RUN powershell -Command `
    "Invoke-WebRequest -Uri 'https://win.rustup.rs/x86_64' -OutFile 'rustup-init.exe'; `
    ./rustup-init.exe -y --default-toolchain stable --target x86_64-pc-windows-msvc; `
    Remove-Item rustup-init.exe"

# Add tools to PATH
RUN powershell -Command `
    "[Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\Program Files\nodejs;C:\Users\ContainerUser\.cargo\bin', [EnvironmentVariableTarget]::Machine)"

# Install Visual Studio Build Tools (required for some Rust dependencies)
RUN powershell -Command `
    "Invoke-WebRequest -Uri 'https://aka.ms/vs/17/release/vs_buildtools.exe' -OutFile 'vs_buildtools.exe'; `
    Start-Process -FilePath 'vs_buildtools.exe' -ArgumentList '--quiet', '--wait', '--add', 'Microsoft.VisualStudio.Workload.VCTools', '--add', 'Microsoft.VisualStudio.Component.Windows10SDK.20348' -Wait; `
    Remove-Item vs_buildtools.exe"

# Copy the entire source code
COPY . .

# Build the Rust workspace
RUN powershell -Command `
    "cargo build --release --workspace"

# Build the MCP agent specifically
RUN powershell -Command `
    "cd terminator-mcp-agent; npm install; npm run build"

# Create a startup script that uses the locally built binary
RUN powershell -Command `
    "New-Item -ItemType File -Path 'start-mcp-dev.ps1' -Force; `
    Set-Content -Path 'start-mcp-dev.ps1' -Value @' `
Write-Host \"ü§ñ Starting Terminator MCP Agent (Development Build)...\" `
Write-Host \"üì¶ Platform: win32-x64 (built from source)\" `
Write-Host \"üåê HTTP Transport Mode with CORS enabled\" `
Write-Host \"üîó Connect to: http://container-ip:8080/mcp\" `
Write-Host \"üíö Health check: http://container-ip:8080/health\" `
Write-Host \"üîß Development mode with debug logging\" `
Write-Host \"\" `
`$env:RUST_LOG = \"debug\" `
cd terminator-mcp-agent `
node index.js -t http --host 0.0.0.0 --port 8080 --cors `
'@"

# Expose the MCP server port
EXPOSE 8080

# Healthcheck to verify the MCP agent is running properly
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 `
    CMD powershell -command "try { \$r = iwr http://localhost:8080/health -UseBasicParsing -TimeoutSec 5; if (\$r.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }"

# Start the MCP agent with development configuration
CMD ["powershell", "-File", "start-mcp-dev.ps1"]
