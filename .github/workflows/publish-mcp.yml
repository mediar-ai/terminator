name: Publish MCP NPM Packages

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            bin_name: terminator-mcp-agent.exe
            npm_dir: win32-x64-msvc

          - host: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin_name: terminator-mcp-agent
            npm_dir: linux-x64-gnu

          - host: macos-13
            target: x86_64-apple-darwin
            bin_name: terminator-mcp-agent
            npm_dir: darwin-x64

          - host: macos-14
            target: aarch64-apple-darwin
            bin_name: terminator-mcp-agent
            npm_dir: darwin-arm64

    name: stable - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v4
      - name: Install Linux dependencies
        if: matrix.settings.host == 'ubuntu-22.04'
        run: bash scripts/install_linux_deps.sh
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-cargo-index

      - name: Install npm dependencies and build binary
        run: |
          cd terminator-mcp-agent
          npm install
          npm run build

      - name: List dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          dumpbin /dependents "terminator-mcp-agent\npm\${{ matrix.settings.npm_dir }}\${{ matrix.settings.bin_name }}"
        shell: cmd

      - name: Smoke test binary (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd terminator-mcp-agent
          $process = Start-Process -FilePath "npm/${{ matrix.settings.npm_dir }}/${{ matrix.settings.bin_name }}" -ArgumentList "--transport", "http", "--port", "3999" -PassThru
          Start-Sleep -Seconds 10
          try {
            $response = Invoke-WebRequest -Uri http://localhost:3999/health -UseBasicParsing
            $response.Content | ConvertFrom-Json | Out-Host
            if ($response.StatusCode -ne 200) {
              throw "Health check failed with status: $($response.StatusCode)"
            }
            Write-Host "Health check passed"
          } catch {
            Write-Error "Failed to connect to health check endpoint: $_"
            $logPath = Join-Path ${env:USERPROFILE} ".terminator\terminator-mcp-agent.log"
            if (Test-Path $logPath) {
              Get-Content $logPath | Write-Error
            }
            exit 1
          } finally {
            # Be tolerant if the process already exited between health check and cleanup
            try {
              $p = Get-Process -Id $process.Id -ErrorAction SilentlyContinue
              if ($null -ne $p -and -not $p.HasExited) {
                Stop-Process -Id $process.Id -Force -ErrorAction SilentlyContinue
              } else {
                Write-Host "Process already exited (PID $($process.Id)); nothing to stop."
              }
            } catch {
              Write-Host "Stop-Process skipped: $_"
            }
          }

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.settings.npm_dir }}-binary
          path: terminator-mcp-agent/npm/${{ matrix.settings.npm_dir }}/${{ matrix.settings.bin_name }}

  publish:
    name: Publish MCP NPM packages
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move binaries to package locations
        run: |
          for dir in artifacts/*; do
            if [ -f "$dir"/* ]; then
              platform=$(echo $(basename "$dir") | sed 's/-binary//')
              binary=$(ls "$dir")
              echo "Moving $binary to terminator-mcp-agent/npm/$platform/"
              mv "$dir"/* "terminator-mcp-agent/npm/$platform/"
            fi
          done

      - name: Publish platform packages
        run: |
          cd terminator-mcp-agent/npm
          for dir in */; do
            if [ -f "$dir/package.json" ]; then
              echo "Publishing $dir"
              cd $dir
              npm publish --access public || echo "Package already published or failed"
              cd ..
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish main package
        run: |
          cd terminator-mcp-agent
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
