apiVersion: v1
kind: Service
metadata:
  name: terminator-mcp-service
  namespace: terminator
  labels:
    app: terminator-mcp-agent
    component: service
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"  # For Azure
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"          # For AWS
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/health"
spec:
  type: LoadBalancer  # Use LoadBalancer for external access
  selector:
    app: terminator-mcp-agent
  ports:
  - name: mcp-http
    port: 8080
    targetPort: mcp-http
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours
---
# ClusterIP Service for internal communication
apiVersion: v1
kind: Service
metadata:
  name: terminator-mcp-internal
  namespace: terminator
  labels:
    app: terminator-mcp-agent
    component: internal-service
spec:
  type: ClusterIP
  selector:
    app: terminator-mcp-agent
  ports:
  - name: mcp-http
    port: 8080
    targetPort: mcp-http
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    protocol: TCP
---
# NodePort Service (alternative for on-premises)
apiVersion: v1
kind: Service
metadata:
  name: terminator-mcp-nodeport
  namespace: terminator
  labels:
    app: terminator-mcp-agent
    component: nodeport-service
spec:
  type: NodePort
  selector:
    app: terminator-mcp-agent
  ports:
  - name: mcp-http
    port: 8080
    targetPort: mcp-http
    nodePort: 30080  # Fixed NodePort for consistency
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    nodePort: 30081
    protocol: TCP
